// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/rpcs/interceptors/authentication.go
//
// Generated by this command:
//
//	mockgen -source=internal/app/rpcs/interceptors/authentication.go -destination=internal/app/rpcs/interceptors/authentication_mock.go -package=interceptors
//

// Package interceptors is a generated GoMock package.
package interceptors

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockAuthenticationInterceptor is a mock of AuthenticationInterceptor interface.
type MockAuthenticationInterceptor struct {
	ctrl     *gomock.Controller
	recorder *MockAuthenticationInterceptorMockRecorder
	isgomock struct{}
}

// MockAuthenticationInterceptorMockRecorder is the mock recorder for MockAuthenticationInterceptor.
type MockAuthenticationInterceptorMockRecorder struct {
	mock *MockAuthenticationInterceptor
}

// NewMockAuthenticationInterceptor creates a new mock instance.
func NewMockAuthenticationInterceptor(ctrl *gomock.Controller) *MockAuthenticationInterceptor {
	mock := &MockAuthenticationInterceptor{ctrl: ctrl}
	mock.recorder = &MockAuthenticationInterceptorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthenticationInterceptor) EXPECT() *MockAuthenticationInterceptorMockRecorder {
	return m.recorder
}

// Authenticate mocks base method.
func (m *MockAuthenticationInterceptor) Authenticate() grpc.UnaryClientInterceptor {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Authenticate")
	ret0, _ := ret[0].(grpc.UnaryClientInterceptor)
	return ret0
}

// Authenticate indicates an expected call of Authenticate.
func (mr *MockAuthenticationInterceptorMockRecorder) Authenticate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Authenticate", reflect.TypeOf((*MockAuthenticationInterceptor)(nil).Authenticate))
}
