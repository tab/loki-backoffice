{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Loki-backoffice backend application</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Create and update roles, permissions, scopes, users and tokens</li> <li>Comprehensive logging and telemetry support (OpenTelemetry) for easier monitoring and tracing</li> <li>Easily integrate into a microservices architecture</li> </ul>"},{"location":"#contents","title":"Contents","text":"<ul> <li>Installation</li> <li>Certificates</li> </ul>"},{"location":"certificates/","title":"Generating Certificates for mTLS","text":"<p>For mTLS (mutual TLS), both the server and client need certificates. The process involves:</p> <ul> <li>Creating a Certificate Authority (CA)</li> <li>Creating server certificates signed by the CA</li> <li>Creating client certificates signed by the CA</li> </ul>"},{"location":"certificates/#generate-the-certificate-authority-ca","title":"Generate the Certificate Authority (CA)","text":"<p>Generate a private key for your CA</p> <pre><code>openssl genrsa -out ca.key 4096\nopenssl req -new -x509 -key ca.key -sha256 -subj \"/CN=Loki CA\" -out ca.crt -days 3650\n</code></pre>"},{"location":"certificates/#generate-the-server-certificate","title":"Generate the Server Certificate","text":""},{"location":"certificates/#generate-server-private-key","title":"Generate server private key","text":"<pre><code>openssl genrsa -out server.key 4096\n</code></pre>"},{"location":"certificates/#create-server-certificate-signing-request-csr","title":"Create server Certificate Signing Request (CSR)","text":"<pre><code>openssl req -new -key server.key -out server.csr -config &lt;(\ncat &lt;&lt;-EOF\n[req]\ndefault_bits = 4096\nprompt = no\ndefault_md = sha256\nreq_extensions = req_ext\ndistinguished_name = dn\n\n[dn]\nCN = loki-server\n\n[req_ext]\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1 = localhost\nIP.1 = 127.0.0.1\nEOF\n)\n</code></pre>"},{"location":"certificates/#sign-the-server-certificate-with-ca","title":"Sign the server certificate with CA","text":"<pre><code>openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.pem -days 825 -sha256 -extfile &lt;(\ncat &lt;&lt;-EOF\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1 = localhost\nIP.1 = 127.0.0.1\nEOF\n)\n</code></pre>"},{"location":"certificates/#generate-the-client-certificate","title":"Generate the Client Certificate","text":"<p>Generate client private key</p> <pre><code>openssl genrsa -out client.key 4096\n</code></pre>"},{"location":"certificates/#create-client-certificate-signing-request-csr","title":"Create client Certificate Signing Request (CSR)","text":"<pre><code>openssl req -new -key client.key -out client.csr -config &lt;(\ncat &lt;&lt;-EOF\n[req]\ndefault_bits = 4096\nprompt = no\ndefault_md = sha256\ndistinguished_name = dn\n\n[dn]\nCN = loki-backoffice\nEOF\n)\n</code></pre>"},{"location":"certificates/#sign-the-client-certificate-with-ca","title":"Sign the client certificate with CA","text":"<pre><code>openssl x509 -req -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out client.pem -days 825 -sha256\n</code></pre>"},{"location":"certificates/#verify-the-certificates","title":"Verify the certificates","text":"<pre><code>openssl verify -CAfile ca.crt server.pem\n</code></pre> <pre><code>openssl verify -CAfile ca.crt client.pem\n</code></pre>"},{"location":"installation/","title":"Installation","text":"<p>Environment Variables:</p> <p>Use <code>.env</code> files (e.g., <code>.env.development</code>) or provide environment variables for:</p> <ul> <li><code>DATABASE_DSN</code> for PostgreSQL</li> <li><code>TELEMETRY_URI</code> for OpenTelemetry</li> </ul> <p>Database Migrations:</p> <p>Run the following command to apply database migrations:</p> <pre><code>GO_ENV=development make db:drop db:create db:migrate\n</code></pre> <p>Run the Services:</p> <pre><code>docker-compose build\ndocker-compose up\n</code></pre> <p>Check health status:</p> <pre><code>curl -X GET http://localhost:8081/health\n</code></pre>"}]}