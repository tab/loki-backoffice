name: Checks
on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
  push:
    branches:
      - master
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true
jobs:
  linter:
    name: Golang CI
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'
      - name: golangci-lint
        # NOTE: https://github.com/golangci/golangci-lint-action/releases/tag/v6.2.0
        uses: golangci/golangci-lint-action@ec5d18412c0aeab7936cb16880d708ba2a64e1ae
        with:
          version: v1.64

  static-check:
    name: Static check
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'
      - name: Run static check
        # NOTE: https://github.com/dominikh/staticcheck-action/releases/tag/v1.3.1
        uses: dominikh/staticcheck-action@fe1dd0c3658873b46f8c9bb3291096a617310ca6

  coverage:
    name: Codecov
    permissions:
      contents: read
      pull-requests: write
    env:
      GO_ENV: test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.4-alpine
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: loki-backoffice-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'

      - name: Load schema.sql
        env:
          PGPASSWORD: postgres
        run: |
          psql -h localhost -U postgres -d loki-backoffice-test -f db/schema.sql

      - name: Run tests
        run: go test ./... -race -coverprofile=coverage.out -covermode=atomic
      - name: Upload coverage to Codecov
        # NOTE: https://github.com/codecov/codecov-action/tree/v5.3.1
        uses: codecov/codecov-action@ad3126e916f78f00edff4ed0317cf185271ccc2d
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
